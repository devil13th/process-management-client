[{"D:\\devil13th\\github\\process-management-client\\src\\index.js":"1","D:\\devil13th\\github\\process-management-client\\src\\App.js":"2","D:\\devil13th\\github\\process-management-client\\src\\reportWebVitals.js":"3","D:\\devil13th\\github\\process-management-client\\src\\layout\\IndexLayout.jsx":"4","D:\\devil13th\\github\\process-management-client\\src\\components\\processinstance\\ProcessInstanceList.jsx":"5","D:\\devil13th\\github\\process-management-client\\src\\api\\ProcessApi.js":"6","D:\\devil13th\\github\\process-management-client\\src\\components\\processinstance\\TaskList.jsx":"7","D:\\devil13th\\github\\process-management-client\\src\\components\\processinstance\\TaskHisList.jsx":"8","D:\\devil13th\\github\\process-management-client\\src\\components\\processdefined\\ProcessDefinedList.jsx":"9","D:\\devil13th\\github\\process-management-client\\src\\axios.js":"10"},{"size":532,"mtime":1615261135256,"results":"11","hashOfConfig":"12"},{"size":284,"mtime":1612864120402,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1611828054570,"results":"14","hashOfConfig":"12"},{"size":3170,"mtime":1615256529393,"results":"15","hashOfConfig":"12"},{"size":7084,"mtime":1615198363139,"results":"16","hashOfConfig":"12"},{"size":1251,"mtime":1615262760200,"results":"17","hashOfConfig":"12"},{"size":8194,"mtime":1615285398675,"results":"18","hashOfConfig":"12"},{"size":6130,"mtime":1615285878112,"results":"19","hashOfConfig":"12"},{"size":7074,"mtime":1615285446803,"results":"20","hashOfConfig":"12"},{"size":428,"mtime":1615261282157,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"iw0ona",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\devil13th\\github\\process-management-client\\src\\index.js",[],["47","48"],"D:\\devil13th\\github\\process-management-client\\src\\App.js",["49","50"],"import logo from './logo.svg';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport IndexLayout from '@/layout/IndexLayout'\nfunction App() {\n  return (\n    <BrowserRouter>\n    <IndexLayout></IndexLayout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","D:\\devil13th\\github\\process-management-client\\src\\reportWebVitals.js",[],"D:\\devil13th\\github\\process-management-client\\src\\layout\\IndexLayout.jsx",["51","52","53"],"import React from 'react'\r\nimport { BrowserRouter, Route,Link } from 'react-router-dom';\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport {\r\n  DesktopOutlined,\r\n  PieChartOutlined,\r\n  FileOutlined,\r\n  TeamOutlined,\r\n  UserOutlined,\r\n} from '@ant-design/icons';\r\nimport ProcessDefinedList from '@/components/processdefined/ProcessDefinedList'\r\nimport ProcessInstanceList from '@/components/processinstance/ProcessInstanceList'\r\nimport TaskList from '@/components/processinstance/TaskList'\r\nimport TaskHisList from '@/components/processinstance/TaskHisList'\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nclass IndexLayout extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  onCollapse = collapsed => {\r\n    console.log(collapsed);\r\n    this.setState({ collapsed });\r\n  };\r\n\r\n  render() {\r\n    const { collapsed } = this.state;\r\n    return (\r\n      <Layout style={{ minHeight: '100vh' }}>\r\n        \r\n        <Sider collapsible collapsed={collapsed} onCollapse={this.onCollapse}>\r\n          <div className=\"logo\" >\r\n            Process Management\r\n          </div>\r\n          <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n            <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"Process Defined\">\r\n              <Menu.Item key=\"3\"><Link to=\"/processDefinedList\">Process Mgmt. </Link></Menu.Item>\r\n              <Menu.Item key=\"4\">Deploy Process</Menu.Item>\r\n            </SubMenu>\r\n            <SubMenu key=\"sub2\" icon={<TeamOutlined />} title=\"Process Instance\">\r\n              <Menu.Item key=\"processInstanceList\"><Link to=\"/processInstanceList\">Instance Mgmt.</Link></Menu.Item>\r\n              <Menu.Item key=\"taskList\"><Link to=\"/taskList\">Task List</Link></Menu.Item>\r\n              <Menu.Item key=\"TaskHisList\"><Link to=\"/TaskHisList\">Task His List</Link></Menu.Item>\r\n              \r\n\r\n              <Menu.Item key=\"9\">Process Var</Menu.Item>\r\n            </SubMenu>\r\n\r\n            <Menu.Item key=\"1\" icon={<PieChartOutlined />}>\r\n              dd\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" icon={<DesktopOutlined />}>\r\n              Option 2\r\n            </Menu.Item>\r\n           \r\n           \r\n            <Menu.Item key=\"9\" icon={<FileOutlined />}>\r\n              Files\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout className=\"site-layout\" >\r\n          \r\n          <Content style={{ margin: '16px 16px 0px' }}>\r\n            \r\n            <div className=\"site-layout-background\" style={{ padding:'8px 24px', minHeight: 360 }}>\r\n            \r\n            <Route path='/processDefinedList' exact component={ProcessDefinedList}></Route>\r\n              <Route path='/processInstanceList' exact component={ProcessInstanceList}></Route>\r\n              <Route path='/taskList' exact component={TaskList}></Route>\r\n              <Route path='/TaskHisList' exact component={TaskHisList}></Route>\r\n              \r\n            </div>\r\n\r\n          </Content>\r\n          <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default IndexLayout","D:\\devil13th\\github\\process-management-client\\src\\components\\processinstance\\ProcessInstanceList.jsx",["54","55","56","57","58","59","60"],"import React from \"react\";\r\nimport { Tabs, Input, Table, Tooltip, Divider, Modal, Button } from \"antd\";\r\nimport {\r\n  InfoCircleOutlined,\r\n  DeleteOutlined,\r\n  UnorderedListOutlined,\r\n  SettingOutlined,\r\n  OrderedListOutlined\r\n} from \"@ant-design/icons\";\r\nimport TaskList from \"./TaskList\";\r\nimport TaskHisList from \"./TaskHisList\";\r\nimport ProcessApi from \"@/api/ProcessApi\";\r\nconst { Search } = Input;\r\nconst { TabPane } = Tabs;\r\nclass ProcessInstanceList extends React.Component {\r\n  state = {\r\n    tableData: [],\r\n    tableLoading: false,\r\n    keyWords: \"\",\r\n    processInstanceId: \"\",\r\n    taskListModalVisible: false,\r\n    taskHisListModalVisible:false,\r\n    pagination: {\r\n      current: 1,\r\n      pageSize: 10,\r\n      pageSizeOptions: [5, 10, 15, 50, 100],\r\n      showTotal: (total, range) => {\r\n        return `${total} items`;\r\n      },\r\n      showSizeChanger: true,\r\n      showQuickJumper: true,\r\n    },\r\n    // 排序\r\n    sorter: {\r\n      field: \"procinst.start_time_\",\r\n      order: \"descend\",\r\n    },\r\n  };\r\n\r\n  onSearch = (v) => {\r\n    this.setState(\r\n      {\r\n        keyWords: v,\r\n      },\r\n      () => {\r\n        this.queryList(true);\r\n      }\r\n    );\r\n  };\r\n\r\n  queryList = (clearPage) => {\r\n    console.log(\"===\", this.state.pagination);\r\n    if (clearPage) {\r\n      // 清除分页\r\n      this.setState(\r\n        {\r\n          pagination: {\r\n            showTotal: (total, range) => {\r\n              return `${total} items`;\r\n            },\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            ...this.state.pagination,\r\n            current: 1,\r\n          },\r\n        },\r\n        this.basicQuery\r\n      );\r\n    } else {\r\n      this.basicQuery();\r\n    }\r\n  };\r\n\r\n  // 基础查询\r\n  basicQuery = () => {\r\n    const _this = this;\r\n    const queryCondition = {\r\n      current: this.state.pagination.current,\r\n      pageSize: this.state.pagination.pageSize,\r\n      total: this.state.pagination.total,\r\n      sortField: this.state.sorter.field,\r\n      sortOrder: this.state.sorter.order.replace(\"end\", \"\"),\r\n      keyWords: this.state.keyWords,\r\n    };\r\n    this.setState({ tableLoading: true });\r\n    ProcessApi.queryProcessInstancePage(queryCondition).then((result) => {\r\n      const r = result.data;\r\n      this.setState({\r\n        tableData: r.list,\r\n        tableLoading: false,\r\n        pagination: {\r\n          showTotal: (total, range) => {\r\n            return `${total} items`;\r\n          },\r\n          showSizeChanger: true,\r\n          showQuickJumper: true,\r\n          current: r.pageNum,\r\n          pageSize: r.pageSize,\r\n          total: r.total,\r\n        },\r\n      });\r\n    });\r\n  };\r\n\r\n  // 分页/排序 事件处理\r\n  handleTableChange = (pagination, filters, sorter) => {\r\n    const st = {\r\n      pagination: {\r\n        showTotal: (total, range) => {\r\n          return `${total} items`;\r\n        },\r\n        showSizeChanger: true,\r\n        showQuickJumper: true,\r\n        current: pagination.current,\r\n        pageSize: pagination.pageSize,\r\n        total: this.state.pagination.total,\r\n      },\r\n    };\r\n    if (sorter.field && sorter.order) {\r\n      st.sorter = {\r\n        field: sorter.field,\r\n        order: sorter.order,\r\n      };\r\n    } else {\r\n      st.sorter = {\r\n        field: \"\",\r\n        order: \"\",\r\n      };\r\n    }\r\n    this.setState(st, this.queryList);\r\n  };\r\n  openTaskListModal = (processInstanceId) => {\r\n    this.setState({\r\n      processInstanceId: processInstanceId,\r\n      taskListModalVisible: true,\r\n    });\r\n  };\r\n  openTaskHisListModal = (processInstanceId) => {\r\n    this.setState({\r\n      processInstanceId: processInstanceId,\r\n      taskHisListModalVisible: true,\r\n    });\r\n  };\r\n  closeModal = () => {\r\n    this.setState({\r\n      taskListModalVisible: false,\r\n      taskHisListModalVisible:false,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.queryList();\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Def ID\",\r\n        dataIndex: \"procDefId\",\r\n      },\r\n      {\r\n        title: \"Key\",\r\n        dataIndex: \"businessKey\",\r\n      },\r\n      {\r\n        title: \"PI Id\",\r\n        dataIndex: \"processInstanceId\",\r\n      },\r\n      {\r\n        title: \"Start\",\r\n        dataIndex: \"processInstanceStartTime\",\r\n      },\r\n      {\r\n        title: \"End\",\r\n        dataIndex: \"processInstanceEndTime\",\r\n      },\r\n      {\r\n        title: \"Operate\",\r\n        key: \"operate\",\r\n        render: (text, record) => (\r\n          <div>\r\n            <Tooltip title=\"Curent Task\">\r\n              <a>\r\n                <UnorderedListOutlined\r\n                  onClick={() => {\r\n                    this.openTaskListModal(record.processInstanceId);\r\n                  }}\r\n                />\r\n              </a>\r\n            </Tooltip>\r\n            <Divider type=\"vertical\"></Divider>\r\n            <Tooltip title=\"Step History\">\r\n              <a>\r\n                <OrderedListOutlined\r\n                  onClick={() => {\r\n                    this.openTaskHisListModal(record.processInstanceId);\r\n                  }}\r\n                />\r\n              </a>\r\n            </Tooltip>\r\n            \r\n            <Divider type=\"vertical\"></Divider>\r\n            <Tooltip title=\"Delete Process Instance\">\r\n              <a>\r\n                <DeleteOutlined />\r\n              </a>\r\n            </Tooltip>\r\n            <Divider type=\"vertical\"></Divider>\r\n            <Tooltip title=\"Set Process Global Variable\">\r\n              <a>\r\n                <SettingOutlined />\r\n              </a>\r\n            </Tooltip>\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n\r\n    const operations = {\r\n      right: (\r\n        <Search\r\n          placeholder=\"key words\"\r\n          onSearch={this.onSearch}\r\n          style={{ width: 200 }}\r\n          size=\"small\"\r\n          enterButton\r\n        />\r\n      ),\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Tabs type=\"card\" tabBarExtraContent={operations}>\r\n          <TabPane tab=\"Process Instance Management\" ></TabPane>\r\n        </Tabs>\r\n\r\n        <Table\r\n          onChange={this.handleTableChange}\r\n          columns={columns}\r\n          dataSource={this.state.tableData}\r\n          pagination={this.state.pagination}\r\n          size=\"small\"\r\n          rowKey=\"processInstanceId\"\r\n        />\r\n\r\n        <Modal\r\n          width={\"100%\"}\r\n          title={<UnorderedListOutlined />}\r\n          visible={this.state.taskListModalVisible}\r\n          onOk={this.closeModal}\r\n          onCancel={this.closeModal}\r\n          destroyOnClose={true}\r\n          maskClosable={false}\r\n        >\r\n          <TaskList processInstanceId={this.state.processInstanceId}></TaskList>\r\n        </Modal>\r\n\r\n\r\n        <Modal\r\n          width={\"100%\"}\r\n          title={<OrderedListOutlined/>}\r\n          visible={this.state.taskHisListModalVisible}\r\n          onOk={this.closeModal}\r\n          onCancel={this.closeModal}\r\n          destroyOnClose={true}\r\n          maskClosable={false}\r\n        >\r\n          <TaskHisList processInstanceId={this.state.processInstanceId}></TaskHisList>\r\n        </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProcessInstanceList;\r\n","D:\\devil13th\\github\\process-management-client\\src\\api\\ProcessApi.js",["61"],"import axios from '@/axios';\r\n\r\nconst context = \"/api\"\r\nexport default {\r\n  startProcessByDefId:function(data){\r\n    return axios({\r\n      method: 'post',\r\n      url: `${context}/startProcessByDefId`,\r\n      data: data\r\n    });\r\n  },\r\n  startProcessByDefKey:function(data){\r\n    return axios({\r\n      method: 'post',\r\n      url: `${context}/startProcessByDefKey`,\r\n      data: data\r\n    });\r\n  },\r\n  nextStep:function(taskId,processVariable){\r\n    return axios({\r\n      method: 'post',\r\n      url: `${context}/nextStep`,\r\n      data: {taskId,taskAssignee:'ADMIN',processVariable}\r\n    });\r\n  },\r\n  queryProcessDef:function(params){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/queryProcessDef`,\r\n      params: params\r\n    });\r\n  },\r\n  queryProcessInstancePage:function(params){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/queryProcessInstancePage`,\r\n      params: params\r\n    });\r\n  },\r\n  queryTaskPage:function(params){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/queryTaskPage`,\r\n      params: params\r\n    });\r\n  },\r\n  queryTaskHisPage:function(params){\r\n    return axios({\r\n      method: 'get',\r\n      url: `${context}/queryTaskHisPage`,\r\n      params: params\r\n    });\r\n  },\r\n\r\n  \r\n}","D:\\devil13th\\github\\process-management-client\\src\\components\\processinstance\\TaskList.jsx",["62","63","64","65","66","67"],"D:\\devil13th\\github\\process-management-client\\src\\components\\processinstance\\TaskHisList.jsx",["68","69","70","71","72","73","74"],"D:\\devil13th\\github\\process-management-client\\src\\components\\processdefined\\ProcessDefinedList.jsx",["75","76","77","78","79","80","81"],"D:\\devil13th\\github\\process-management-client\\src\\axios.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":12},{"ruleId":"86","severity":1,"message":"90","line":2,"column":25,"nodeType":"88","messageId":"89","endLine":2,"endColumn":30},{"ruleId":"86","severity":1,"message":"91","line":2,"column":10,"nodeType":"88","messageId":"89","endLine":2,"endColumn":23},{"ruleId":"86","severity":1,"message":"92","line":3,"column":24,"nodeType":"88","messageId":"89","endLine":3,"endColumn":34},{"ruleId":"86","severity":1,"message":"93","line":15,"column":9,"nodeType":"88","messageId":"89","endLine":15,"endColumn":15},{"ruleId":"86","severity":1,"message":"94","line":2,"column":55,"nodeType":"88","messageId":"89","endLine":2,"endColumn":61},{"ruleId":"86","severity":1,"message":"95","line":4,"column":3,"nodeType":"88","messageId":"89","endLine":4,"endColumn":21},{"ruleId":"86","severity":1,"message":"96","line":76,"column":11,"nodeType":"88","messageId":"89","endLine":76,"endColumn":16},{"ruleId":"97","severity":1,"message":"98","line":183,"column":15,"nodeType":"99","endLine":183,"endColumn":18},{"ruleId":"97","severity":1,"message":"98","line":193,"column":15,"nodeType":"99","endLine":193,"endColumn":18},{"ruleId":"97","severity":1,"message":"98","line":204,"column":15,"nodeType":"99","endLine":204,"endColumn":18},{"ruleId":"97","severity":1,"message":"98","line":210,"column":15,"nodeType":"99","endLine":210,"endColumn":18},{"ruleId":"100","severity":1,"message":"101","line":4,"column":1,"nodeType":"102","endLine":56,"endColumn":2},{"ruleId":"86","severity":1,"message":"94","line":2,"column":60,"nodeType":"88","messageId":"89","endLine":2,"endColumn":66},{"ruleId":"86","severity":1,"message":"96","line":105,"column":11,"nodeType":"88","messageId":"89","endLine":105,"endColumn":16},{"ruleId":"97","severity":1,"message":"98","line":239,"column":15,"nodeType":"99","endLine":239,"endColumn":18},{"ruleId":"97","severity":1,"message":"98","line":245,"column":15,"nodeType":"99","endLine":245,"endColumn":18},{"ruleId":"97","severity":1,"message":"98","line":251,"column":15,"nodeType":"99","endLine":251,"endColumn":18},{"ruleId":"97","severity":1,"message":"98","line":257,"column":15,"nodeType":"99","endLine":257,"endColumn":18},{"ruleId":"86","severity":1,"message":"103","line":2,"column":37,"nodeType":"88","messageId":"89","endLine":2,"endColumn":44},{"ruleId":"86","severity":1,"message":"94","line":2,"column":46,"nodeType":"88","messageId":"89","endLine":2,"endColumn":52},{"ruleId":"86","severity":1,"message":"104","line":5,"column":9,"nodeType":"88","messageId":"89","endLine":5,"endColumn":27},{"ruleId":"86","severity":1,"message":"105","line":5,"column":28,"nodeType":"88","messageId":"89","endLine":5,"endColumn":46},{"ruleId":"86","severity":1,"message":"106","line":5,"column":66,"nodeType":"88","messageId":"89","endLine":5,"endColumn":81},{"ruleId":"86","severity":1,"message":"96","line":102,"column":11,"nodeType":"88","messageId":"89","endLine":102,"endColumn":16},{"ruleId":"97","severity":1,"message":"98","line":202,"column":15,"nodeType":"99","endLine":202,"endColumn":18},{"ruleId":"86","severity":1,"message":"94","line":2,"column":52,"nodeType":"88","messageId":"89","endLine":2,"endColumn":58},{"ruleId":"86","severity":1,"message":"107","line":3,"column":8,"nodeType":"88","messageId":"89","endLine":3,"endColumn":17},{"ruleId":"86","severity":1,"message":"104","line":5,"column":9,"nodeType":"88","messageId":"89","endLine":5,"endColumn":27},{"ruleId":"86","severity":1,"message":"106","line":5,"column":66,"nodeType":"88","messageId":"89","endLine":5,"endColumn":81},{"ruleId":"86","severity":1,"message":"96","line":85,"column":11,"nodeType":"88","messageId":"89","endLine":85,"endColumn":16},{"ruleId":"97","severity":1,"message":"98","line":213,"column":15,"nodeType":"99","endLine":213,"endColumn":18},{"ruleId":"97","severity":1,"message":"98","line":219,"column":15,"nodeType":"99","endLine":219,"endColumn":18},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'BrowserRouter' is defined but never used.","'Breadcrumb' is defined but never used.","'Header' is assigned a value but never used.","'Button' is defined but never used.","'InfoCircleOutlined' is defined but never used.","'_this' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Divider' is defined but never used.","'UserSwitchOutlined' is defined but never used.","'CaretRightOutlined' is defined but never used.","'SettingOutlined' is defined but never used.","'PropTypes' is defined but never used.","no-global-assign","no-unsafe-negation"]